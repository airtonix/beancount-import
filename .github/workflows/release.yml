name: Release

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

# Needed for nx-set-shas within nx-cloud-main.yml, when run on the master branch
permissions:
  actions: read
  contents: write
  deployments: write
  pull-requests: write
  id-token: write

jobs:
  Process:
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }}.${{ steps.release-please.outputs.patch }}
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      prs_created: ${{ steps.release-please.outputs.prs_created }}
    steps:
      - uses: googleapis/release-please-action@7987652d64b4581673a76e33ad5e98e3dd56832f # v4.1.2
        id: release-please
        with:
          token: ${{secrets.RELEASE_PLEASE_TOKEN}}
      - name: Print Release Data
        run: |
          echo 'Release Data:'
          echo '''
            ${{ toJSON(steps.release-please.outputs) }}
          '''

  QA:
    needs: Process
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # 4.1.7

      - uses: jdx/mise-action@d6e32c1796099e0f1f3ac741c220a8b7eae9e5dd # v2.0.6
        with:
          version: 2024.8.12 # [default: latest] mise version to install
          install: true # [default: true] run `mise install`
          cache: true # [default: true] cache mise using GitHub's cache
          log_level: debug # [default: info] log level
          experimental: true

      - name: Install Python Packages
        uses: ./.github/actions/setup-dependencies

      - name: Preflight
        run: |
          mise run test:lint
          mise run test:types
          mise run test:unit
          mise run test:integration

          mise run build
          mise run docs:build

  DeployProd:
    needs:
      - Process
      - QA
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/beancount-importer-rules
    steps:
      # fetch depth 0 is needed to get all the tags for mkdocs
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # 4.1.7
        with:
          fetch-depth: 0

      # need to setup git author so that mkdocs-mike can commit the changes
      # to the gh-pages branch
      - name: setup git author
        uses: ./.github/actions/setup-git-author
        with:
          user: actor

      - uses: jdx/mise-action@d6e32c1796099e0f1f3ac741c220a8b7eae9e5dd # v2.0.6
        with:
          version: 2024.8.12 # [default: latest] mise version to install
          install: true # [default: true] run `mise install`
          cache: true # [default: true] cache mise using GitHub's cache
          log_level: debug # [default: info] log level
          experimental: true

      - name: Install Python Packages
        uses: ./.github/actions/setup-dependencies

      # If we've created a release, we want to publish it with the computed version
      # If we've created a PR, we want to publish it, but with a dev version
      - name: Rc Version
        id: get_release_version
        run: |
          mise run compute-release-version \
            $(echo "${{ toJSON(needs.Process.outputs) }}" | yq -o=json -I=0 .) \
            "$GITHUB_OUTPUT"

      # we only want to publish when a release pr is merged, created or updated
      # chore prs should not trigger a publish
      - name: Publish
        if: ${{ needs.Process.outputs.releases_created == 'true' || needs.Process.outputs.prs_created == 'true' }}
        run: |
          pdm version ${{ steps.get_release_version.outputs.Version }}
          mise run build || true
          mise run publish pypi

      - name: Tag Dev Version
        if: ${{ needs.Process.outputs.prs_created == 'true' }}
        run: |
          git tag -a ${{ steps.get_release_version.outputs.Version }}
          git push origin ${{ steps.get_release_version.outputs.Version }}

      # we want to publish the docs on every change to the master branch
      - name: Docs
        if:
        run: |
          mise run docs:publish \
            ${{ steps.get_release_version.outputs.Version }} \
            ${{ steps.get_release_version.outputs.Track }}
